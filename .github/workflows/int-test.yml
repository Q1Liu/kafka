# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License

name: intTest

on:
  pull_request:
  push:
    # Using wildcard (e.g. '**') to build on all branches will cause PRs to run duplicate checks like `test (pull_request)` with `test (push)`.
    branches:
      - 3.0-li
      - 3.0-li-dev**
      - 3.0-li-rc**

jobs:
  clients:
    # Name the Job
    name: clients
    # Set the type of machine to run on
    runs-on: ubuntu-latest
    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          # bring in all history because the gradle versions plugin needs to "walk back" to the closest ancestor tag
          fetch-depth: 0
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: '8'
      - name: Run tests
        run: ./gradlew -PmaxTestRetries=3 cleanTest clients:integrationTest --no-daemon -PtestLoggingEvents=started,passed,skipped,failed
  core:
    # Name the Job
    name: core (${{ matrix.prefixes }})
    # Set the type of machine to run on
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  # We still want to see all jobs' build result to the end
      matrix:
        prefixes:
          - A B C
          - D E F
          - G H I J K
          - L M N O
          - P Q
          - R S
          - T U V W X Y Z
    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          # bring in all history because the gradle versions plugin needs to "walk back" to the closest ancestor tag
          fetch-depth: 0
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: '8'
      - name: Run tests
        env:
          PREFIXES: ${{ matrix.prefixes }}
        # Use set -f to disable shell expansion on *
        run: >
          set -f
          && ./gradlew -PmaxTestRetries=3 -PtestLoggingEvents=started,passed,skipped,failed --no-daemon cleanTest core:integrationTest `for i in $PREFIXES; do printf ' --tests %s*' $i; done`
          && set +f

